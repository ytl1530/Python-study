'''
数据类型的学习和使用，使用 type() 函数来检查数据的类型 
'''

# 1、整数类型
num = 123 # 十进制整数
num2 = 0b010101 # 二进制的整数，前面需要引导符号 0b 或 0B 来引导
num3 = 0o763 # 八进制的整数，前面需要引导符号 0o 或 0O 来引导
num4 = 0x987A # 十六进制的整数，前面需要引导符号 0x 或 0X 来引导
type(num) # 数据类型：<class 'int'>


# 2、浮点类型：有整数和小数组合的数值
num5 = 12.3
num6 = 1.99E2342 # 科学计数法
num7 = 0.1 + 0.2 # 不确定的尾数问题  输出：0.30000000000000004
num8 = round(num7,1) # 使用 round 函数，来保留一位小数  输出：0.3
type(num8) # 数据类型：<class 'float'>


# 3、复数类型：拥有 实数 和 虚数 两部分，实数部分使用 .real 获取，获取虚数部分使用 .imag 获取
num9 = 123+456j
print('实数:',num9.real ) # 实数
print('虚数:',num9.imag ) # 虚数
type(num9) # 数据类型：<class 'complex'>


# 4、字符串(有序的字符序列)类型：使用 单引号、双引号、三引号 包起来的字符都是字符串

# 4.1、单行字符串
str = '张三' 
str1 = "李四" 

# 4.2、多行字符串
str2 = '''
    张三
    李四
    王五
'''
str3 = """
    张三
    李四
    王五
"""

# 4.3、转义字符：使用转义字符时，在字符前加 r 或 R , 转义字符失效

str4 = '张三有一头小毛驴\n他从来也不骑'     # \n  换行符 
str5 = '张三有一头小毛驴\t他从来也不骑'     # \t  水平制表位，用于横向跳到下一个制表位 输出：张三有一头小毛驴        他从来也不骑
str6 = '\"张三有一头小毛驴他从来也不骑\"'   # \"  双引号 输出："张三有一头小毛驴他从来也不骑"
str7 = '\'张三有一头小毛驴他从来也不骑\''   # \'  单引号 输出：'张三有一头小毛驴他从来也不骑'
str8 = '张三有一头小毛驴\\他从来也不骑'     # \\  一个反斜杠 输出：张三有一头小毛驴\他从来也不骑

# 4.4、原字符：在字符前加 r 或 R , 使转义字符失效
str9  = r'张三有一头小毛驴\n他从来也不骑'     #  输出：张三有一头小毛驴\n他从来也不骑
str10 = R'张三有一头小毛驴\t他从来也不骑'     #  输出：张三有一头小毛驴\t他从来也不骑
str11 = r'\"张三有一头小毛驴他从来也不骑\"'   #  输出：\"张三有一头小毛驴他从来也不骑\"
str12 = R'\'张三有一头小毛驴他从来也不骑\''   #  输出：\'张三有一头小毛驴他从来也不骑\'
str13 = r'张三有一头小毛驴\\他从来也不骑'     #  输出：张三有一头小毛驴\\他从来也不骑

# 4.5、字符串的索引：从左往右的索引是从 0 开始，从右往左的索引是从 -1 开始

str14 = '你好世界'
str14[0]    # 从左往右字符串的索引  输出：你
str14[-3]   # 从右往左字符串的索引  输出：好

# 4.6、截取字符串：字符串[N:M]，从 N 开始到 M 结束 ，不包含 M

str14[0:3]     # 从左往右字符串的截取字符串  输出：你好世
str14[-3:-1]   # 从右往左字符串的截取字符串  输出：好世


# 4.7、字符串的操作
x = '2008'
y = '北京奥运会'

x + y  # '+' 操作符将字符串 x 和 y 拼接起来 输出：2008北京奥运会

x * 4  # '*' 操作符是将 x 复制 x*n 或 n*x  输出：2008200820082008

# 'in' 操作符是查询一个字符串是否存在于另一个字符串中，输出的结果为 True 或 False 
'北京' in y # 输出：True
'上海' in y # 输出：False


# 5、布尔类型：用来表示'真'值或'假'值的数据类型，True表示整数1，False表示整数0 



